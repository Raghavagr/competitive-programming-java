Que) Given stock prices, you have to find the span of each price. span means the difference between the current price and the price higher then it previously.

Approach - use next greater to left

// CODE

// CODE URL -> https://ide.geeksforgeeks.org/online-java-compiler/27652f8c-ab92-480c-8f7d-f917aa3aa53d

/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;

class GFG {
    public static int[] stockSpan(int[] arr) {
        int[] span = new int[arr.length];
        Stack<Integer> st = new Stack<>();
        
        //first insert the idx 0 in stack and set span of 1st ele as 1 because no greater to it at left
        span[0] = 1;
        st.push(0);
        
        // Now start from 1st element and find the span in 3 steps
        for(int i=1; i<arr.length; i++) {
            //Step-1 (Pop the smaller elements that curr ele to the left)
            while(st.size() > 0 && arr[i] > arr[st.peek()]) {
                st.pop();
            }
            
            //Step-2 (Check you found the next greater to left or not and clculate the span) (Catch ans)
            if(st.size() == 0) {
                span[i] = i+1;  // no greater to left to the idx+1 is span
            }
            else {
                span[i] = i - st.peek();  // find the diff. No need of plus one because in diff you will get with plus 1 only
            }
            
            // Step-3 (Push the currnt idx to stack)
            st.push(i);
        }
        
        return span;
    }
    
	public static void main (String[] args) {
		int[] arr = {1,1,3,4,5,6,1};
		int[] res = stockSpan(arr);
		for(int i=0; i<res.length; i++) {
		    System.out.print(res[i] + " ");
		}
	}
}
