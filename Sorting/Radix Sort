// Radix Sort 

--- Implement and explain complete Radix sort algorithm


How Radix sort works

Explanation - So the concept is very easy in Radix sort where you sort the complete array each number by unit places. 
- Like first you sort array by ones place, then you by tens place, then you sort by hundred place, and so on so after sorting array till maximum number length the array becomed sorted.

Example with array of 3 length

arr = [267, 358, 294]  -> so here when sorting on any place if two or more digits are same then maintain the relative order to be it stable sort.

Step-1) Sort ones place - (compare 7, 8, 4) -> arr = [294, 267, 358]
Step-2) Sort tens place - (compare 9, 6, 5) -> arr = [358, 267, 294]
step-3) sort hundred place - (compare 3, 2, 2) -> arr = [267, 294, 358]

So here we get that the priority of hund > tens > ones  so the number if great at ones or tens pos and small at hundred then it will come first.

Implementation Steps

1. First Find the maximum of array -> because you can determine the number of places to compare with maximum number place only and run till max number first place we do not reach
    And if any number do have places to maximum then 0 is there so in sorting it comes first
2. Make use of count sort algo where you can compare the array numbers of each place using frequency array, and sort the numbers.
   The idea is the digit will always be between 0-9 so frequency array length can be 10. Minimum is always 0 so you have to just pick the place digit, form its frequency and sort the number

CODE

// URL - https://ide.geeksforgeeks.org/online-java-compiler/6359fa1c-c94d-42f9-836b-55fefc50dda8


import java.io.*;

class GFG {
    
    public static void radixSort(int[] arr) {
        int max = Integer.MIN_VALUE;
        for(int num: arr) {
            if(num > max) {
                max = num;
            }
        }
        
        int exp = 1; // forming places starting with ones
        while(exp <= max) {
            countSort(arr, exp);
            exp = exp * 10;
        }
    }
    
    public static void countSort(int[] arr, int exp) {
        int ans[] = new int[arr.length];
        int freq[] = new int[10];
        // form freq arr
        for(int i=0; i<arr.length; i++) {
            freq[(arr[i] / exp) % 10]++;
        }
        
        //convert to prefic-sum
        for(int i=1; i<freq.length; i++) {
            freq[i] = freq[i] + freq[i-1];
        }
        
        //stable sorting
        for(int i=arr.length-1; i>=0; i--) {
            int pos = freq[(arr[i]/exp)%10] - 1;
            ans[pos] = arr[i];
            freq[(arr[i]/exp)%10]--;
        }
        
        //fill original arr
        for(int i=0; i<arr.length; i++) {
            arr[i] = ans[i];
        }
    }
    
	public static void main (String[] args) {
		int[] arr = {267, 358, 294};
		radixSort(arr);
		for(int i=0; i<arr.length; i++) {
		    System.out.println(arr[i]);
		}
	}
}
