/*package whatever //do not write package name here */

import java.io.*;

class GFG {
    public static class Node {
	    int data;
	    Node next;
	}
	
	public static class LinkedList {
	    Node head;
	    Node tail;
	    int size;
	    
	    public int size() {
	        return size;
	    }
	    
	    public void display() {
	        Node temp = head;
            if(temp == null) {
                System.out.println("List empty");
            }
            else {
                while(temp != null) {
                    System.out.print(temp.data + " ");
                    temp = temp.next;
                }
                System.out.println();
            }
	    }
	    
	    public void addLast(int val) {
	        // there are 2 cases
	        if(size == 0) {
	            Node temp = new Node();
	            temp.data = val;
	            temp.next = null;
	            head = tail = temp;
	            size++;
	        }
	        else {
	            Node temp = new Node();
	            temp.data = val;
	            temp.next = null;
	            tail.next = temp;
	            tail = temp;
	            size++;
	        }
	    }
	    
	    public void removeFirst() {
	        if(size == 0) {
	            System.out.println("List empty");
	        }
	        else if(size == 1) {
	            head = tail = null;
	            size--;
	            System.out.println("Removed, only one element was there");
	        }
	        else {
	            head = head.next;
	            size--;
	            System.out.println("Removed");
	        }
	    }
	    
	    public void getFirst() {
	        if(size == 0) {
	            System.out.println("List empty");
	        }
	        else {
	            System.out.println(head.data);
	        }
	    }
	    
	    public void getLast() {
	        if(size == 0) {
	            System.out.println("List empty");
	        }
	        else {
	            System.out.println(tail.data);
	        }
	    }
	    
	    public void getAt(int idx) {
	        if(size == 0) {
	            System.out.println("List empty");
	        }
	        else if(idx < 0 || idx > size) {
	            System.out.println("Invalid idx");
	        }
	        else {
	            Node temp = head;
	            for(int i=0; i<idx; i++) {
	                temp = temp.next;
	            }
	            System.out.println("Data at given idx is: " + temp.data);
	        }
	    }
	    
	    public void addFirst(int val) {
	        Node temp = new Node();
	        temp.data = val;
	        temp.next = head;
	        head = temp;
	        if(size == 0) {
	            tail = temp;
	        }
	        size++;
	    }
	    
	    public void addAt(int val, int idx) {
	        if(idx < 0 || idx > size) {
	            System.out.println("Invalid idx");
	        }
	        
	        else if(idx == 0) {
	            addFirst(val);
	        }
	        else if(idx == size) {
	            addLast(val);
	        }
	        else {
	            Node new_node = new Node();
	            new_node.data = val;
	            
	            Node temp = head;
	            for(int i=0; i<idx; i++) {
	                temp = temp.next;
	            }
	            
	            new_node.next = temp.next;
	            temp.next = new_node;
	            size++;
	        }
	    }
	    
	    public void removeLast() {
	        if(size == 0) {
	            System.out.println("List empty");
	        }
	        else if(size == 1) {
	            head = tail = null;
	            size--;
	        }
	        else {
	            Node temp = head;
	            for(int i=0; i<size-2; i++) {
	                temp = temp.next;
	            }
	            
	            tail = temp;
	            temp.next = null;
	            size--;
	        }
	    }
	    
	    public void removeAt(int idx) {
	        if(size == 0) {
	            System.out.println("List empty");
	        }
	        
	        else if(idx < 0 || idx > size) {
	            System.out.println("Invalid index");
	        }
	        
	        else if(idx == 0) {
	            removeFirst();
	        }
	        
	        else if(idx == size) {
	            removeLast();
	        }
	        
	        else {
	            Node temp = head;
	            for(int i=0; i<idx-1; i++) {
	                temp = temp.next;
	            }
	            
	            temp.next = temp.next.next;
	            size--;
	        }
	    }
	    
	    public void reverseList() {
	        Node prev = null;
	        Node curr = head;
	        
	        while(curr != null) {
	            Node next = curr.next;
	            curr.next = prev;
	            prev = curr;
	            curr = next;
	        }
	        
	        tail = head;
	        head = prev;
	    }
	}
	
	
	public static void main (String[] args) {
		System.out.println("Implementing Linked List all functions!");
		//create a new List
		LinkedList list = new LinkedList();
		list.addLast(4);
		list.addFirst(5);
		list.addLast(8);
		list.addAt(6, 2);
		System.out.println("The size of list is " + list.size());
		System.out.println("Printing list");
		list.display();
		list.removeFirst();
		list.removeLast();
		System.out.println("Printing list");
		list.display();
		list.addLast(9);
		list.addLast(12);
		list.removeAt(2);
		System.out.println("Printing list");
		list.display();
		System.out.println("Reverse a list");
		list.reverseList();
		list.display();
	}
}
